# Ваша задача найти в тысяче файлов одно секретное слово, отличающееся от разрешенного списка.

import asyncio
import os
import aiofiles
import logging


PATH = "/files_with_secret_word/"

WORDS = [
    "дом",
    "море",
    "солнце",
    "небо",
    "лес",
    "река",
    "гора",
    "птица",
    "цветок",
    "жизнь",
    "любовь",
    "работа",
    "друг",
    "снег",
    "вода",
    "ветер",
    "огонь",
    "поля",
    "города",
    "день",
    "ночь",
    "мост",
    "улица",
    "поезд",
    "парк",
    "здание",
    "площадь",
    "дождь",
    "собака",
    "кошка",
    "свет",
    "тень",
    "игра",
    "песок",
    "книга",
    "город",
    "песня",
    "звезда",
    "механизм",
    "автомобиль",
    "поездка",
    "путешествие",
    "молоко",
    "хлеб",
    "яйцо",
    "фрукт",
    "овощ",
    "журнал",
    "газета",
    "кафе",
    "ресторан",
    "рецепт",
    "вино",
    "чай",
    "кофе",
    "письмо",
    "письменность",
    "рука",
    "ноги",
    "часы",
    "календарь",
    "зеркало",
    "стол",
    "стул",
    "диван",
    "шкаф",
    "завтрак",
    "обед",
    "ужин",
    "горы",
    "реки",
    "поля",
    "море",
    "океан",
    "пляж",
    "солнечный",
    "дождливый",
    "ветряный",
    "холодный",
    "тёплый",
    "лето",
    "зима",
    "весна",
    "осень",
    "страна",
    "континент",
    "планета",
    "звезда",
    "галактика",
    "космос",
    "мир",
    "человек",
    "семья",
    "родители",
    "дети",
    "сестра",
    "брат",
    "дедушка",
    "бабушка",
    "дядя",
    "тётя",
    "кукла",
    "игрушка",
    "тренировка",
    "спорт",
    "футбол",
    "баскетбол",
    "волейбол",
    "тренер",
    "спортзал",
    "кухня",
    "спальня",
    "ванная",
    "коридор",
    "гараж",
    "сад",
    "огород",
    "площадка",
    "гостинная",
    "столовая",
    "интернет",
    "телефон",
    "компьютер",
    "телевизор",
    "фильм",
    "сериал",
    "новости",
    "погода",
    "прогноз",
    "город",
    "посёлок",
    "деревня",
    "село",
    "улица",
    "переулок",
    "площадь",
    "парк",
    "горы",
    "лес",
    "пещера",
    "водопад",
    "озеро",
    "рыба",
    "мясо",
    "суп",
    "бульон",
    "пирог",
    "пицца",
    "паста",
    "салат",
    "десерт",
    "торт",
    "пирожное",
]


class FindSecretWord:
    def __init__(self, path, words):
        self.path = path
        self.words = words

    async def find_word(self, file_name: str):
        async with aiofiles.open(file_name, mode="r", encoding="utf-8") as file:
            async for line in file:
                if line.strip() not in self.words:
                    logging.warning(
                        f'{file_name.split("_")[-1].split(".")[0]}: {line.strip()}'
                    )
                    return True

    async def main(self):
        try:
            async with asyncio.TaskGroup() as tg:
                [
                    tg.create_task(self.find_word(self.path + file))
                    for file in os.listdir(self.path)
                ]
        except* Exception as e:
            [logging.warning(error) for error in e.exceptions]


secret_word = FindSecretWord(PATH, WORDS)
asyncio.run(secret_word.main())
