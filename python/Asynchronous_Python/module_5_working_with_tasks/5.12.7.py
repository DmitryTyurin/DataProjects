# Создайте корутину для демонстрации обратного вызова. Она должна будет выводить на экран сообщение, соответствующее коду, и вызывать функцию для печати кода.
# Создайте функцию, которая будет выводить на экран код.
# Создайте корутину (точку входа main()), которая будет создавать и запускать задачи для корутин. Каждая задача должна быть связана с определенным сообщением.
# Используйте метод add_done_callback() для добавления обратного вызова к задаче. Этот метод принимает функцию, которая будет вызвана, когда задача будет выполнена.

import asyncio

codes = [
    "56FF4D",
    "A3D2F7",
    "B1C94E",
    "F56A1D",
    "D4E6F1",
    "A1B2C3",
    "D4E5F6",
    "A7B8C9",
    "D0E1F2",
    "A3B4C5",
    "D6E7F8",
    "A9B0C1",
    "D2E3F4",
    "A5B6C7",
    "D8E9F0",
]
messages = [
    "Привет, мир!",
    "Как дела?",
    "Что нового?",
    "Добрый день!",
    "Пока!",
    "Спокойной ночи!",
    "Удачного дня!",
    "Всего хорошего!",
    "До встречи!",
    "Счастливого пути!",
    "Успехов в работе!",
    "Приятного аппетита!",
    "Хорошего настроения!",
    "Спасибо за помощь!",
    "Всего наилучшего!",
]


async def print_message(index):
    print(f"Сообщение: {messages[index]}")
    return index


def print_code(task):
    index = task.result()
    print(f"Код: {codes[index]}")


async def main():
    for i in range(len(codes)):
        task = asyncio.create_task(print_message(i))
        task.add_done_callback(print_code)
        await task


asyncio.run(main())
