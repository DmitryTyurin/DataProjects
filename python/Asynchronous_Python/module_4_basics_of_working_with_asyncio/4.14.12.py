# Создать синхронную функцию find_most_common_word(text) для поиска самого распространённого слова в тексте. Искать нужно в нижнем регистре, но знаки препинания будут считаться частью слов (т.е. для деления на слова воспользуйтесь обычной функцией split()). Функция должна принимать текст статьи и возвращать самое распространенное слово в ней в нижнем регистре.
# Создать асинхронную функцию download_and_process() для "скачивания" статьи и запуска анализа текста статьи в отдельном потоке.
# Скачивание статьи - асинхронная задержка случайной величины от 0.1 до 0.5 секунд.
# Анализ текста - запуск синхронной функции find_most_common_word(text) в отдельном потоке.
# Корутина не должна возвращать результат.
# Корутина должна для каждой статьи списка articles добавить ключ 'tag'. Значение по данному ключу - самое распространенное слово, найденное функцией find_most_common_word(text).
# Создать корутину main(), внутри которой будут созданы задачи на основе корутины download_and_process() для каждой статьи.
# Корутина main() не должна возвращать никакой результат.
# После завершения всех задач выведите на экран название статей и "тег" для них в формате: f"{title}: {tag}", для каждой статьи на новой строке.

import asyncio
import random
from collections import Counter

articles = [
    {
        "id": 1,
        "title": "Основы Python",
        "content": "Python – язык программирования, который подходит для решения широкого спектра задач, от веб-разработки до анализа данных и машинного обучения. Благодаря своей простоте Python часто используется в начале обучения программированию. Python поддерживает множество библиотек, фреймворков, таких как Django для веб-разработки и Pandas для работы с данными. Выбирайте Python !",
    },
    {
        "id": 2,
        "title": "Введение в JavaScript",
        "content": "JavaScript – это язык программирования, который выполняется в браузере и позволяет создавать динамичные, интерактивные веб-страницы. JavaScript поддерживает функциональное, а также объектно-ориентированное программирование, асинхронное программирование. JavaScript является основным языком для фронтенд-разработки, часто используется вместе с HTML и CSS.",
    },
    {
        "id": 3,
        "title": "Системное программирование на C++",
        "content": "C++ – язык программирования, который позволяет разработчикам создавать эффективные и производительные приложения. C++ расширяет язык C, добавляя объектно-ориентированное программирование, поддержку шаблонов. C++ используется в системном программировании, разработке игр, в высокопроизводительных вычислениях благодаря своей способности работать с низкоуровневыми данными и управлять памятью.",
    },
    {
        "id": 4,
        "title": "Что такое SQL?",
        "content": "SQL (Structured Query Language) – это язык запросов, используемый для управления реляционными базами данных. SQL позволяет пользователям выполнять операции по созданию, чтению, обновлению и удалению данных. SQL запросы могут извлекать данные из одной или нескольких таблиц, фильтровать их, сортировать и агрегировать, что делает его мощным инструментом для работы с большими объемами информации.",
    },
    {
        "id": 5,
        "title": "Основы HTML и CSS",
        "content": "HTML (HyperText Markup Language), CSS (Cascading Style Sheets) являются основными технологиями при создании веб-страниц. HTML задает структуру контента на странице с помощью различных HTML тегов, таких как заголовки, параграфы и изображения. CSS используется при определении визуального оформления этих элементов, включая цвета, шрифты, макеты. HTML и CSS часто используются вместе для создания современных веб-сайтов.",
    },
    {
        "id": 6,
        "title": "Преимущества использования Git",
        "content": "Git – это система управления версиями, которая позволяет отслеживать изменения в коде, сотрудничать с другими разработчиками. Git обеспечивает распределенное управление версиями, что позволяет каждому разработчику работать из локальной копии репозитория и синхронизировать изменения с центральным репозиторием. Git упрощает управление проектами и упрощает откат к предыдущим версиям кода.",
    },
    {
        "id": 7,
        "title": "Основы машинного обучения с Python",
        "content": "Машинное обучение – это область искусственного интеллекта, которая использует алгоритмы для анализа данных и создания моделей, способных делать прогнозы или принимать решения. Python является популярным языком для машинного обучения благодаря  библиотекам Python - Scikit-learn, TensorFlow, Keras. Эти инструменты Python упрощают процесс создания и обучения моделей машинного обучения.",
    },
    {
        "id": 8,
        "title": "Что такое API?",
        "content": "API (Application Programming Interface) – это набор инструментов и протоколов, который позволяет различным программным приложениям взаимодействовать друг с другом. API предоставляет разработчикам возможность использовать функции или данные другого приложения без необходимости знать детали его внутренней работы. Api упрощает интеграцию различных систем и расширяет функциональные возможности приложений.",
    },
    {
        "id": 9,
        "title": "Основы веб-разработки",
        "content": "Веб разработка включает в себя создание, поддержание веб сайтов, веб приложений. Она охватывает фронтенд-разработку (создание пользовательских интерфейсов), бэкенд-разработку (создание серверной логики и взаимодействие с базами данных). Современные веб технологии включают HTML, CSS, JavaScript для фронтенда и различные серверные языки и фреймворки для бэкенда.",
    },
    {
        "id": 10,
        "title": "Программирование на Java",
        "content": "Java – это язык программирования, который известен своей переносимостью и широким применением в корпоративных системах. Java поддерживает объектно-ориентированное программирование и предоставляет богатый набор библиотек, фреймворков, таких как Spring, Hibernate. Java используется для создания веб-приложений, мобильных приложений (Android), серверных решений.",
    },
]


def find_most_common_word(text: str):
    words = text.split()
    word_count = Counter(words)
    most_common_word = word_count.most_common(1)[0][0].lower()
    return most_common_word


async def download_and_process(article: dict):
    await asyncio.sleep(random.uniform(0.1, 0.5))  # Имитация скачивания

    loop = asyncio.get_running_loop()
    tag = await loop.run_in_executor(None, find_most_common_word, article["content"])

    article["tag"] = tag


async def main():
    tasks = []
    for article in articles:
        task = asyncio.create_task(download_and_process(article))
        tasks.append(task)

    await asyncio.gather(*tasks)

    for article in articles:
        print(f"{article['title']}: {article['tag']}")


asyncio.run(main())
