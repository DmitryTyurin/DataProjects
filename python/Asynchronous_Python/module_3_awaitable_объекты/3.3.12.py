# Создайте словарь counters, где ключи — это имена счётчиков ("Counter 1" и "Counter 2"), а значения —  это текущие значения счётчиков, изначально равные нулю.
# Используйте словарь max_counts, где ключи представляют собой имена счётчиков, а значения — это максимальное число, до которого каждый счётчик должен подсчитать.
# Напишите асинхронную функцию counter, которая принимает имя счётчика и задержку.
# В цикле эта функция должна увеличивать значение соответствующего счётчика в словаре counters на 1, затем делать паузу на заданное количество секунд,  затем выводить сообщение с именем счетчика и его текущим значением. Этот цикл должен продолжаться до тех пор, пока значение счётчика не достигнет соответствующего значения в словаре max_counts.
# В асинхронной функции main создайте две задачи с использованием asyncio.create_task(), каждая из которых будет выполнять функцию counter с разными именами счётчиков, но с одинаковой фиксированной задержкой. Эта функция должна ожидать завершения обеих задач.

import asyncio


counters = {"Counter 1": 0, "Counter 2": 0}
max_counts = {"Counter 1": 13, "Counter 2": 7}


async def counter(name: str, delay: int) -> None:
    while counters[name] < max_counts[name]:
        counters[name] += 1
        await asyncio.sleep(delay)
        print(f"{name}: {counters[name]}")


async def main() -> None:
    tasks = [asyncio.create_task(counter(k, v)) for k, v in counters.items()]

    await asyncio.gather(*tasks)


asyncio.run(main())
