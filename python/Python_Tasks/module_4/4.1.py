# Чтобы расшифровать сообщение, ему необходимо вывести каждый символ на новой строке.
# Ваша задача написать программу, и помочь Алану спасти мир!

print("\n".join(input()))


# Программа принимает на вход строку. На выходе каждая буква выводится на отдельной
# строке с указанием порядкового номера.

text = input()
count = 0

for i in text:
    count += 1

    print(f"{count}) {i}")


# Программа принимает в качестве входных данных строку, состоящую из слов, разделенных пробелами.
# Ее задача - вывести каждое слово из этой строки на отдельной строке.

text = list(map(str, input().split()))

print("\n".join(text))


# На вход программе подается число, выведите все числа в квадрате в промежутке от 1 до n ( не включительно )

print(" ".join(str(i**2) for i in range(1, int(input()))))


# На вход программе подаются числа (каждое на отдельной строке), концом считается число 0,
# выведите на экран массив чисел отсортированных по возрастанию.
# Если в массиве имеются одинаковые числа, удалите дубликат.

numbers = []
while True:
    num = int(input())
    if num == 0:
        break
    numbers.append(num)

numbers = list(set(numbers))
numbers.sort()

print(numbers)


# На вход программе подается число, выведите его факториал.


def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)


print(factorial(int(input())))


# Учитывая целое число num, верните количество шагов, чтобы уменьшить его до нуля .
# За один шаг, если текущее число четное,
# вам нужно разделить его на 2, в противном случае вам придется вычесть 1 от него.


def steps_to_zero(num: int) -> int:
    steps = 0
    while num != 0:
        if num % 2 == 0:
            num //= 2
        else:
            num -= 1
        steps += 1
    return steps


print(steps_to_zero(int(input())))


# Вам дано целое число , представленное в виде строки с цифрами разделенными пробелом .
# Цифры упорядочены от наиболее значимого к наименее значимому, слева направо.
# Возведите большое целое число в квадрат  и верните результирующий массив цифр .


def square_of_large_number(nums: str) -> list:
    digits = list(map(int, nums.split()))

    digits[-1] = digits[-1] ** 2

    return digits


print(square_of_large_number(input()))


# На вход программе подаются числа, концом считается число 0,
# выведите на экран массив чисел отсортированных по убыванию.
# Если в массиве имеются одинаковые числа, удалите их.

numbers = []
while True:
    num = int(input())
    if num == 0:
        break
    numbers.append(num)

numbers = list(set(numbers))
numbers.sort(reverse=True)

print(numbers)


# На вход программе подаются числа, каждое на отдельной строке, концом считается число -1.
# Необходимо вывести список всех чисел четных двум в порядке возрастания.

numbers = []
while True:
    num = int(input())
    if num == -1:
        break
    if num % 2 == 0:
        numbers.append(num)

numbers.sort()
print(numbers)
