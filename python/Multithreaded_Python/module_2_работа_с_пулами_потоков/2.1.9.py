# Описание задачи:
# Напишите программу, использующую ThreadPoolExecutor(по образцу первого степа) для одновременного преобразования строк текста в верхний регистр. Ваша программа должна содержать функцию to_uppercase(string), которая принимает строку и возвращает её в верхнем регистре.
#
# Используйте список предложений strings = []. Данный список вшит в условие задачи, создавать его вам не нужно.
#
# # Список строк для обработки
# strings = [
#     "Да Здравствует ThreadPoolExecutor!!!",
#     "Многопоточность в Python позволяет выполнять несколько задач одновременно, улучшая производительность.",
#     ...
#     ...
#     ...
#     "Многопоточность может увеличить сложность управления памятью и ресурсами.",
#     "Правильное использование многопоточности в Python может значительно улучшить производительность приложений."
# ]
# Создайте пул потоков с ограниченным количеством рабочих потоков и отправьте каждую строку из списка в пул потоков для обработки с помощью submit().
#
# После завершения задач, соберите и выведите результаты с помощью result() и print().
#
# Вывод вашей программы должен быть следующим.

from concurrent.futures import ThreadPoolExecutor

strings = [
    "Да Здравствует ThreadPoolExecutor!!!",
    "Многопоточность в Python позволяет выполнять несколько задач одновременно, улучшая производительность.",
    "Многопоточность может увеличить сложность управления памятью и ресурсами.",
    "Правильное использование многопоточности в Python может значительно улучшить производительность приложений.",
]


class TaskPool:
    def __init__(self, strings):
        self.strings = strings

    @staticmethod
    def to_uppercase(string):
        return string.upper()

    def run_pool(self):
        with ThreadPoolExecutor(max_workers=3) as executor:
            for string in self.strings:
                future = executor.submit(self.to_uppercase, string)
                print(future.result())


def main():
    task_pool = TaskPool(strings)
    task_pool.run_pool()


main()
