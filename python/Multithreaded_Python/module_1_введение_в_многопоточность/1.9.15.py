# Описание задачи:
#
# Ваша задача - создать программу, использующую многопоточность для конкурентной обработки информации о студентах, хранящейся в словаре. Для каждого студента будет запущен отдельный поток, который конкурентно обработает и выведет его данные, используя локальное хранилище потока для сохранения и обработки информации.
#
# # Словарь с информацией о студентах для передачи в потоки
# # Полный словарь вшит в задачу
#
# students_info = {'Варлаам Бирюкова': {'Возраст': 25, 'Специальность': None, 'Город': None, 'Страна': 'Россия',
#                                       'Университет': 'ЗАО «Миронова-Прохоров»', 'Курс': 3, 'Группа': 'CK008',
#                                       'Электронная почта': 'ostaplitkin@example.com', 'Телефон': None,
#                                       'Дата рождения': '2005-08-22', 'Пол': 'Женский',
#                                       'Хобби': ['Физика', 'Астрономия'], 'Время обработки': 6},
#                  'Никандр Мамонтов': {'Возраст': 20, 'Специальность': 'Компьютерные науки',
#                                       'Город': 'к. Октябрьский (Башк.)', 'Страна': 'Россия', 'Университет': None,
#                                       'Курс': 3, 'Группа': 'LE057', 'Электронная почта': 'jakub_2001@example.org',
#                                       'Телефон': '+7 919 424 9512', 'Дата рождения': '2002-01-13', 'Пол': None,
#                                       'Хобби': None, 'Время обработки': 5},}
# Шаги выполнения задачи:
#
# Изучите предоставленный словарь students_info, где каждый ключ - это уникальное имя потока (имя студента), а значение - словарь с детальной информацией о студенте.
#
# Напишите функцию thread_function, которая будет принимать имя студента, его детальную информацию и время обработки. Функция должна использовать локальное хранилище потока для хранения данных студента и выводить информацию о каждом атрибуте студента, исключая те, у которых значение None.
#
# Если в информации о студенте время обработки указано ('Время обработки'), используйте это значение для задержки между выводами информации. Если значение отсутствует или равно None, используйте стандартное время обработки - 3 секунды. Для ускорения процесса используйте внутри функции 1/10 от полученного времени обработки.
#
# time.sleep(local.sleep_time/10)
# Инициируйте и запустите поток для каждого студента из словаря students_info={}, передавая необходимые данные в функцию потока. Дождитесь завершения всех потоков, прежде чем завершить программу.
#
# Программа должна иметь примерно следующий вывод:
#
# print(f"Имя потока - {threading.current_thread().name}, локальные данные потока - {key}: {value}")

import threading
import time

# Словарь с информацией о студентах для передачи в потоки
# Полный словарь вшит в задачу

STUDENTS_INFO = {
    "Варлаам Бирюкова": {
        "Возраст": 25,
        "Специальность": None,
        "Город": None,
        "Страна": "Россия",
        "Университет": "ЗАО «Миронова-Прохоров»",
        "Курс": 3,
        "Группа": "CK008",
        "Электронная почта": "ostaplitkin@example.com",
        "Телефон": None,
        "Дата рождения": "2005-08-22",
        "Пол": "Женский",
        "Хобби": ["Физика", "Астрономия"],
        "Время обработки": 6,
    },
    "Никандр Мамонтов": {
        "Возраст": 20,
        "Специальность": "Компьютерные науки",
        "Город": "к. Октябрьский (Башк.)",
        "Страна": "Россия",
        "Университет": None,
        "Курс": 3,
        "Группа": "LE057",
        "Электронная почта": "jakub_2001@example.org",
        "Телефон": "+7 919 424 9512",
        "Дата рождения": "2002-01-13",
        "Пол": None,
        "Хобби": None,
        "Время обработки": 5,
    },
    "Елизар Самсонова": {
        "Возраст": 22,
        "Специальность": "Физика",
        "Город": "ст. Терскол",
        "Страна": "Россия",
        "Университет": "ОАО «Петрова, Зыков и Тихонова»",
        "Курс": 1,
        "Группа": "rr263",
        "Электронная почта": None,
        "Телефон": None,
        "Дата рождения": "2001-05-03",
        "Пол": "Мужской",
        "Хобби": ["Математика", "Головоломки"],
        "Время обработки": 6,
    },
    "Филарет Субботина": {
        "Возраст": 22,
        "Специальность": "Математика",
        "Город": "ст. Миллерово",
        "Страна": "Россия",
        "Университет": "Авдеева Лимитед",
        "Курс": None,
        "Группа": None,
        "Электронная почта": None,
        "Телефон": None,
        "Дата рождения": None,
        "Пол": "Мужской",
        "Хобби": None,
        "Время обработки": 7,
    },
    "Виталий Некрасова": {
        "Возраст": 21,
        "Специальность": "Математика",
        "Город": "клх Выборг",
        "Страна": None,
        "Университет": "РАО «Бурова»",
        "Курс": 2,
        "Группа": "Ko315",
        "Электронная почта": "braginaskold@example.com",
        "Телефон": "+7 283 360 06 25",
        "Дата рождения": "1998-04-24",
        "Пол": "Мужской",
        "Хобби": ["Математика", "Головоломки"],
        "Время обработки": 3,
    },
    "Наркис Шубин": {
        "Возраст": 24,
        "Специальность": "Биология",
        "Город": "д. Киров (Вятка)",
        "Страна": "Россия",
        "Университет": "Тихонов Групп",
        "Курс": None,
        "Группа": "yl434",
        "Электронная почта": "borislav93@example.org",
        "Телефон": None,
        "Дата рождения": None,
        "Пол": "Женский",
        "Хобби": ["Физика", "Астрономия"],
        "Время обработки": 4,
    },
    "Селиван Суворова": {
        "Возраст": 24,
        "Специальность": "Физика",
        "Город": "с. Плесецк",
        "Страна": "Россия",
        "Университет": "ООО «Гущин-Елисеева»",
        "Курс": None,
        "Группа": "Lv446",
        "Электронная почта": None,
        "Телефон": "8 129 913 5768",
        "Дата рождения": "2000-08-11",
        "Пол": "Мужской",
        "Хобби": ["Кодинг", "Шахматы"],
        "Время обработки": 3,
    },
    "Харлампий Дьячков": {
        "Возраст": 24,
        "Специальность": "Биология",
        "Город": "с. Асбест",
        "Страна": "Россия",
        "Университет": None,
        "Курс": 2,
        "Группа": "QM411",
        "Электронная почта": "evseevatamara@example.com",
        "Телефон": "+7 (016) 514-6461",
        "Дата рождения": "2004-01-07",
        "Пол": "Мужской",
        "Хобби": None,
        "Время обработки": 1,
    },
    "Валерьян Терентьев": {
        "Возраст": 23,
        "Специальность": None,
        "Город": "г. Калачинск",
        "Страна": None,
        "Университет": "НПО «Мясникова Анисимов»",
        "Курс": 2,
        "Группа": "cW619",
        "Электронная почта": "cheslav1985@example.net",
        "Телефон": "8 938 269 0700",
        "Дата рождения": "2005-08-24",
        "Пол": None,
        "Хобби": None,
        "Время обработки": 8,
    },
    "Нестор Харитонова": {
        "Возраст": 23,
        "Специальность": None,
        "Город": None,
        "Страна": "Россия",
        "Университет": "АО «Костина»",
        "Курс": None,
        "Группа": "oE109",
        "Электронная почта": "prokofi_48@example.org",
        "Телефон": None,
        "Дата рождения": "2003-05-19",
        "Пол": "Женский",
        "Хобби": ["Математика", "Головоломки"],
        "Время обработки": None,
    },
    "Прасковья Петухова": {
        "Возраст": 24,
        "Специальность": None,
        "Город": "г. Одинцово",
        "Страна": None,
        "Университет": "Кулаков Лтд",
        "Курс": None,
        "Группа": "zt927",
        "Электронная почта": None,
        "Телефон": "+7 009 637 7850",
        "Дата рождения": "1998-11-11",
        "Пол": "Женский",
        "Хобби": ["Математика", "Головоломки"],
        "Время обработки": 4,
    },
    "Любосмысл Устинов": {
        "Возраст": None,
        "Специальность": None,
        "Город": None,
        "Страна": "Россия",
        "Университет": "РАО «Афанасьева-Матвеева»",
        "Курс": 2,
        "Группа": "BS270",
        "Электронная почта": "bikovladimir@example.net",
        "Телефон": "+7 717 861 45 78",
        "Дата рождения": "2001-03-02",
        "Пол": "Мужской",
        "Хобби": ["Физика", "Астрономия"],
        "Время обработки": 1,
    },
    "Афиноген Петрова": {
        "Возраст": 25,
        "Специальность": None,
        "Город": "клх Бийск",
        "Страна": "Россия",
        "Университет": None,
        "Курс": 4,
        "Группа": "mr918",
        "Электронная почта": "rostislav1975@example.org",
        "Телефон": "8 (679) 853-46-06",
        "Дата рождения": "2004-06-17",
        "Пол": None,
        "Хобби": None,
        "Время обработки": 6,
    },
    "Жанна Шарапов": {
        "Возраст": 25,
        "Специальность": "Математика",
        "Город": "г. Дно",
        "Страна": None,
        "Университет": "НПО «Аксенова-Лихачева»",
        "Курс": 2,
        "Группа": "qi768",
        "Электронная почта": "jharitonov@example.net",
        "Телефон": "8 194 128 60 40",
        "Дата рождения": "2003-04-14",
        "Пол": None,
        "Хобби": ["Математика", "Головоломки"],
        "Время обработки": 6,
    },
    "Федосий Архипова": {
        "Возраст": 25,
        "Специальность": "Физика",
        "Город": "ст. Нурлат",
        "Страна": "Россия",
        "Университет": "ФК Гранд Капитал",
        "Курс": 2,
        "Группа": "Ab634",
        "Электронная почта": "volkovvalerjan@example.com",
        "Телефон": "+7 369 785 20 91",
        "Дата рождения": "2002-05-14",
        "Пол": "Женский",
        "Хобби": ["Физика", "Астрономия"],
        "Время обработки": 1,
    },
}


class StudentStorage:
    def __init__(self, students_info: dict):
        self.students_info = students_info
        self.local_data = threading.local()
        self.threads = []
        self.results = []

    def thread_function(self, name: str, info: dict):
        sleep_time = info.get("Время обработки")

        self.local_data.sleep_time = self.local_data.sleep_time = (
            sleep_time / 10 if sleep_time is not None else 3 / 10
        )
        self.local_data.name = name
        self.local_data.info = info

        for key, value in info.items():
            if value is not None and (
                key == "Время обработки" or self.local_data.sleep_time > 0
            ):
                time.sleep(self.local_data.sleep_time)
                self.results.append(
                    f"Имя потока - {threading.current_thread().name}, локальные данные потока - {key}: {value}"
                )

    def run_treads(self):
        for stud_name, stud_info in self.students_info.items():
            self.threads.append(
                threading.Thread(
                    target=self.thread_function,
                    args=(stud_name, stud_info),
                    name=stud_name,
                )
            )

        [thread.start() for thread in self.threads]
        [thread.join() for thread in self.threads]

        [print(x) for x in self.results]


ss = StudentStorage(STUDENTS_INFO)
ss.run_treads()
