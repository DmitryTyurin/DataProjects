# Нужно найти ссылки, подходящие по следующим условиям:
#     Протокол https или http
#     После протокола идёт ://
#     Домен состоит из символов a-z, .
#     Путь состоит из символов a-z, 0-9, -, _, /
#     Параметры начинаются с ? и состоят из a-z, =, &, 0-9
#     Якорь начинается с # и состоит из a-z
#     Протокол и адрес у ссылок есть всегда, остальных частей может не быть
#     Ссылка не может быть подпоследовательностью
#     Тестовые данные:
#     Входные данные:
#     На вход программе подаётся 1 строка текста.
# Выходные данные:
# Выведите в консоль ссылку, протокол, домен, параметры, якорь найденных совпадений в следующем виде:
# Полная ссылка: https://example.com/test/42523/step/2?q=query&s=search#test
# Протокол: https | Домен: example.com | Параметры: ?q=query&s=search | Якорь: #test
# Если группа ничего не нашла, то вместо совпадения нужно вывести None.

import re

pattern = r"\b(https?)\://([a-z.]+)/(?:[a-z0-9-/_]*)(\?[a-z=&0-9]*)?(#[a-z]+)?"
string = input()


class RegularExpression:
    """
    Класс для работы с регулярными выражениями
    """

    def __init__(self, pattern: str, string: str):
        self.string = string
        self.pattern = pattern

    def get_result(self):
        result = re.finditer(self.pattern, self.string)

        for i in result:
            print("Полная ссылка:", i[0])
            print(
                f"Протокол: {i[1]} | Домен: {i[2]} | Параметры: {i[3]} | Якорь: {i[4]}\n"
            )


r = RegularExpression(pattern, string)
r.get_result()
