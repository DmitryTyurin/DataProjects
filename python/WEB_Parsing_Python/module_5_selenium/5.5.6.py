# 1Ô∏è‚É£ –ó–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç-—Ç—Ä–µ–Ω–∞–∂—ë—Ä —Å –ø–æ–º–æ—â—å—é Selenium.
# 2Ô∏è‚É£ –ù–∞–π–¥–∏—Ç–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å —Ç–µ–≥–æ–º <a>.
# 3Ô∏è‚É£ –ü—Ä–æ–π–¥–∏—Ç–µ—Å—å –ø–æ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É <a> –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞ stormtrooper. –°—É–º–º–∏—Ä—É–π—Ç–µ –≤—Å–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞ stormtrooper –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —à—Ç—É—Ä–º–æ–≤–∏–∫–æ–≤.
# 4Ô∏è‚É£ –í—Å—Ç–∞–≤—å—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Å–µ—Ö —à—Ç—É—Ä–º–æ–≤–∏–∫–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å"  , –ø–æ—è–≤–∏—Ç—Å—è –∑–∞–≤–µ—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å(–≤ –≤–∏–¥–µ —Ñ—Ä–∞–∑—ã), —Å—á–∏—Ç–∞–π—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é .text.
# 5Ô∏è‚É£ –í—Å—Ç–∞–≤—å—Ç–µ –ø–∞—Ä–æ–ª—å –≤ –ø–æ–ª–µ –Ω–∏–∂–µ, –º–µ–∂–¥—É –∫–∞–≤—ã—á–∫–∞–º–∏ –Ω–∞ Stepik.
# üí° –°–æ–≤–µ—Ç: –∑–∞–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é (—Å—á–µ—Ç—á–∏–∫) –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —à—Ç—É—Ä–º–æ–≤–∏–∫–æ–≤ –≤ –∞—Ä–º–∏–∏.

from selenium import webdriver
from selenium.webdriver.common.by import By
import time


class DataDriver:
    def __init__(self):
        self.url = "https://parsinger.ru/selenium/3/3.3.3/index.html"
        self.options = self.setup_options()
        self.driver = webdriver.Chrome(options=self.options)
        self.result = []

    @staticmethod
    def setup_options():
        from selenium.webdriver.chrome.options import Options

        options = Options()
        # options.add_argument("--headless")  # –ë–µ–∑ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        # options.add_argument('--disable-gpu')  # –û—Ç–∫–ª—é—á–∞–µ–º GPU
        options.add_argument("--window-size=1920,1080")  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞

        return options

    @staticmethod
    def extract_digits(text):
        import re

        pattern = r"\d{1,}\.\d{1,}|\d{1,}"
        digits = "".join(re.findall(pattern, text))

        if digits == "":
            return 0
        else:
            return int(digits)

    def get_result(self, driver, url):
        driver.get(url)

        elements = driver.find_elements(By.TAG_NAME, "a")

        for element in elements:
            attr = self.extract_digits(element.get_attribute("stormtrooper"))
            self.result.append(attr)

        sum_result = sum(self.result)

        driver.find_element(By.ID, "inputNumber").send_keys(sum_result)
        driver.find_element(By.ID, "checkBtn").click()

        result = driver.find_element(By.ID, "feedbackMessage").text
        result = result.split(":")[1].strip()

        return result

    def run(self):
        with self.driver as driver:
            data = self.get_result(driver, self.url)

            print(data)


def main():
    d = DataDriver()
    d.run()


main()
