# Перед вами код из предыдущего задания. Исправьте его так, чтобы на экран появилась строка«hello», затем «bye»


def outer() -> None:
    def say_hello() -> None:
        print("hello")

    def say_bye() -> None:
        print("bye")

    say_hello()
    say_bye()


# Имеется функция wrap_increment, которая должна принимать значение и увеличивать его на 1. Увеличение на один должно выполняться за счет вложенной функции _inc.
# Ваша задача дописать в теле wrap_increment определение функции _inc, которая принимает значение и увеличивает его.


def wrap_increment(value):
    def _inc(value):
        return value + 1

    return _inc(value)


# Перед вами вполне работающая функция get_extensions, которая принимает список названий файлов. Функция get_extensions находит расширение у названий файлов и составляет из них список, который возвращает в качестве ответа. Если у файла нет расширения, то для такого файла get_extensions подставляет пустую строку.
#
# Ваша задача произвести рефакторинг данного кода, с целью создания внутренний вспомогательной функции, которая выполняет всю работу по поиску расширения. Вы можете к примеру назвать ее _get_extension и тогда, определив такую функцию ей можно пользоваться следующим образом
#
# for i in file_list:
#     results.append(_get_extension(i))
# или даже сразу так
#
# return [_get_extension(i) for i in file_list]
# Перепишите функцию get_extensions с учетом описанных пожеланий по созданию внутренней функции.


def get_extensions(file_list):
    results = []
    for i in file_list:
        if "." in i:
            results.append(i.split(".")[-1])
        else:
            results.append("")
    return results


# Перед вами частично реализованная функция double_odd_numbers, которая принимает список чисел и возвращает в качестве результата новый список, составленный из нечетных чисел, увеличенных в два раза.
#
# Внутри себя double_odd_numbers использует две функции:
#
# double, увеличивающая число в два раза;
#
# is_odd, проверяющая на нечетность
# Ваша задача реализовать эти функции внутри  double_odd_numbers


def double_odd_numbers(numbers):
    def double(number):
        return number * 2

    def is_odd(number):
        return number % 2 != 0

    return [double(i) for i in numbers if is_odd(i)]


# Пользуясь вложенными функциями, реализуйте простой калькулятор. Для этого необходимо реализовать функцию calculate , которая принимает три параметра:
#
# обязательный числовой параметр x
# обязательный числовой параметр y
# необязательный строковый параметр operation,  по умолчанию принимает значение английской буквы a
# В данной функции должны быть реализованы следующие функции:
#
# addition - сложение двух чисел,
# subtraction - вычитание из первого переданного параметра второго;
# division - деление первого на второго,
# multiplication - умножение двух чисел.
# Каждая из этих четырёх вложенных функций должна распечатать результат математической операции и ничего не возвращать
#
# А при помощи параметра operation и условного оператора нужно выбрать какая из функций должна быть вызвана:
#
# если operation = a, вызываем функцию addition;
# если operation = s, вызываем функцию subtraction;
# если operation = d, вызываем функцию division;
# если operation = m, вызываем функцию multiplication;
# calculate(2, 5) # Печатает 7.0
# calculate(2.2, 15, 'a') # Печатает 17.2
# calculate(22, 15, 's') # Печатает 7.0
# calculate(2, 3.2, 'm') # Печатает 6.4
# calculate(10, 0.4, 'd') # Печатает 25.0
#
#
# Если operation принимает значение, отличное от перечисленных выше букв, то необходимо вывести на экран  сообщение «Ошибка. Данной операции не существует».
#
# Также если мы выполняем деление, то второе число (y) не должно равняться нулю, в противном случае необходимо вывести на экран: «На ноль делить нельзя!».
#
# Вам необходимо написать только определение функции  calculate


def calculate(x, y, operation="a"):
    def addition(x, y):
        print(x + y)

    def subtraction(x, y):
        print(x - y)

    def division(x, y):
        if y == 0:
            print("На ноль делить нельзя!")
        else:
            print(x / y)

    def multiplication(x, y):
        print(x * y)

    if operation == "a":
        addition(x, y)
    elif operation == "s":
        subtraction(x, y)
    elif operation == "d":
        division(x, y)
    elif operation == "m":
        multiplication(x, y)
    else:
        print("Ошибка. Данной операции не существует")
