# Создайте пустой класс Person (внутри будет pass).
# Создайте экземпляр id_1 класса Person. Не забывайте про скобки Person().
# С помощью функции setattr(), создайте в экземпляре атрибут name и присвойте ему значение "Vasya". Не забудьте про кавычки ("name").
# Измените с помощью функции setattr() атрибут name в экземпляре, и присвойте ему значение "Masha".
# Выведите на экран получившееся значение атрибута name экземпляра, с помощью print.


class Person:
    pass


id_1 = Person()
setattr(id_1, "name", "Vasya")
setattr(id_1, "name", "Masha")


# Создайте класс Person и объявите внутри класса атрибут setup со значением ['set_name', 'set_age', 'set_work', 'set_study'].
# Создайте экземпляр id_1 от класса Person (не забываем скобки).
# С помощью цикла for пройдите по атрибуту setup (используйте setup через id_1). Затем, с помощью функции setattr(), создайте 4 атрибута с именами взятыми из setup, а значения каждого атрибута будет создавать пользователь, поэтому используйте input() в функции setattr().
# Часть кода уже написана, вам нужно лишь выполнить задания выше.


class Person:
    setup = ["set_name", "set_age", "set_work", "set_study"]


id_1 = Person()

for i in id_1.setup:
    setattr(id_1, i, input())


# Часть кода уже написана.
# Создайте экземпляр id_1 класса Person. Не забывайте про скобки Person().
# С помощью getattr(), выведите на экран значения трёх атрибутов, используя экземпляр.
# Каждое значение выводится на отдельной строке, начиная с dance, смотрите пример вывода ниже.
# Не забывайте про кавычки, если используете getattr() вне цикла.
# По желанию, используйте цикл for.

list_person = ["hobby", "work", "study"]


class Person:
    hobby = "dance"
    work = "design"
    study = "college"


id_1 = Person()

for i in list_person:
    print(getattr(id_1, i))


# Часть кода уже написана
# Создайте класс Magic
# Создайте атрибут класса ingredients со значением sample(magic_ing, 3). Таким образом создастся список из трёх рандомных ингредиентов для коктейля.
# Создайте экземпляр my_cocktail от класса Magic (не забудьте скобки).
# С помощью цикла и getattr(), выведите на экран три ингредиента, которые находятся в атрибуте ingredients, используя экземпляр. Если не получится, можете вывести без цикла, но с помощью getattr() для тренировки. Не забывайте кавычки в имени атрибута.

from random import sample

magic_ing = [
    "Черные коты",
    "Лягушачьи глаза",
    "Паутина",
    "Корень мандрагоры",
    "Жабий язык",
    "Женский волос",
    "Крысы",
    "Любовное зелье",
    "Кровь дракона",
    "Пепел отрока",
    "Чертополох",
    "Пыльца беладонны",
    "Черная свеча",
    "Сердце ворона",
    "Собачий клык",
    "Масло лунного света",
    "Костыли ведьмы",
    "Подземный гриб",
    "Крыло летучей мыши",
    "Ядовитый плющ",
    "Перо ворона",
    "Камень чародея",
    "Слезы совы",
    "Горсть звездной пыли",
    "Волшебный кристалл",
    "Костер из драконьих костей",
    "Зелье бессмертия",
    "Черная роза",
    "Древний свиток заклинаний",
    "Ключ от врат ада",
]


class Magic:
    ingredients = sample(magic_ing, 3)


my_cocktail = Magic()

for i in getattr(my_cocktail, "ingredients"):
    print(i)


# Создайте пустой класс Pokemon (используйте pass).
# Создайте экземпляр pokemons класса Pokemon.
# С помощью setattr(), добавьте в экземпляр 4 атрибута: pikachu, scyther, gyarados, gengar. Значения у всех атрибутов будет пустая строка, например pikachu = "". Можно использовать списки и циклы, или как вам удобней.
# С помощью hasattr(), сделайте проверку, есть ли в экземпляре атрибут: lapras, pikachu, alakazam. Результат проверки напишите на отдельной строке, соответственно перечисленным атрибутам (см. пример ниже).


class Pokemon:
    pass


pokemons = Pokemon()

for i in ["pikachu", "scyther", "gyarados", "gengar"]:
    setattr(pokemons, i, "")

print(hasattr(pokemons, "lapras"))
print(hasattr(pokemons, "pikachu"))
print(hasattr(pokemons, "alakazam"))


# Часть кода уже написана. Переменная names содержит список имён.
# Проверить, есть ли в списке names имена атрибутов класса Person.
# Если имя в списке и имя атрибута в классе совпадают, удалите атрибут из класса.
# Ваша задача только проверить и удалить совпадающие атрибуты, всё остальное уже готово.

names = ["Klementina", "Roza", "Balu", "Lena", "Leonid"]  # список имён


class Person:
    Vasya = ""
    Masha = ""
    Lena = ""
    Leonid = ""


for name in names:
    if hasattr(Person, name):
        delattr(Person, name)

# строки ниже не удаляйте, ради вселенной:
print(len(Person.__dict__))
